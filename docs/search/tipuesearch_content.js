var tipuesearch = {"pages":[{"title":"Changelog","text":"  All notable changes to this project will be documented in this file.  The format is based on Keep a Changelog, and this project adheres to Semantic Versioning.  [Unreleased]  [Unreleased]   lorem   [0.0.17] - 2020-04-16  Fixed   A bug that might loose the field tags for an field item, on multiple item fields, if items with lower deltas were removed via AJAX.   [8.x-0.0.13] - 2020-03-16  Changed   loadFromParent has been replaced by loadByParentField. \\Drupal\\field_tag\\FieldTagService::attachTags now sets the FieldTag instance as $item-&gt;fieldTag instead of $item-&gt;field_tag.  The latter should only be used when you are setting the value, as this is what will be saved when the entity is saved.  ","tags":"","url":"CHANGELOG.html"},{"title":"Field Tag Drupal Module","text":"  {% include('_overview.md') %}  Contact The Developer  In the Loft Studios Aaron Klump - Web Developer sourcecode@intheloftstudios.com 360.690.6432 PO Box 29294 Bellingham, WA 98228-1294  http:\/\/www.intheloftstudios.com https:\/\/github.com\/aklump ","tags":"","url":"README.html"},{"title":"Developers","text":"   The value of fieldTag on a \\Drupal\\Core\\Field\\FieldItemInterface is read only.  It gets added to the item when one calls \\Drupal\\field_tag\\FieldTagService::attachTags.  It is completely ignored during entity save operations, except that it may be unset if field_tag is also present on the field item. The value of field_tag on a \\Drupal\\Core\\Field\\FieldItemInterface is for entity save operations.  If present, this value will overwrite the existing value of the tag for that item.  This is a string and represents the full tag value, which may be CSV of multiple tags, e.g., 'foo, bar'.  During entity save when field_tag is present, fieldTag will be unset. If $entity-&gt;field_tag_sync, an array, contains a field name of a tag-enabled field, then during entity save operations, all existing field tags for all items in that field will be deleted.  Then each items will be iterated over and only those which have field_tag will be saved.  You must understand how this works, before you go programmatically handling field_tag CRUD operations.  For example.  $item = $node-&gt;field_images-&gt;get(0)-&gt;getValue(); $item['field_tag'] = 'new tag'; $node-&gt;field_images-&gt;filter(function () {   return FALSE; })-&gt;appendItem($item);  \/\/ This line is VERY important because of the use of the filter method \/\/ above.  If you did not include this line, then you would potentially \/\/ have orphaned field tags. $node-&gt;field_tag_sync[] = 'field_images';  $node-&gt;save();   ","tags":"","url":"developers.html"},{"title":"Summary","text":"  Provides a means to attach a tag-style input box to any entity field, which allows content managers to tag the field content.  Developers may take advantage of this additional metadata when manipulating fields.  The use case for which this was written is this.  Allow the tagging of images on an multiple value image field to indicate which image is the hero image, which image is the thumb image, and untagged images are just that.  It allows the content managers to indicate the role the image is playing for that given entity.  Visit https:\/\/aklump.github.io\/field_tag for full documentation.  About Tags   Tags are not case-sensitive. Tags may contain inner spaces, but neither leading nor trailing spaces. Multiple tags must separated by a comma or \"comma+space\", e.g. 'foo,bar' or 'foo, bar'.   Configuration   Enable this module. Visit the Manage fields page for the entity you've picked. Click on the Edit button for the given field. Enable the Field Tag, and adjust settings as necessary.   Give the permission Use field tagging to the correct user roles. Visit an entity edit page and make sure you see the tag field as configured.   Developers  This provides the UI and storage mechanism for field content tagging.  It creates a new entity type field_tag.  It's up to you to implement use cases for the data.  See field_tag.api.php for example code.  Do not rely on the id of a Field tag entity beyond the scope of a single request. The ids should be considered ephemeral.  Tagging During Migration  Here's an example of how you might tag an image field during a migration, this assumes field_images is already set up with field tagging.  process:   field_images:     plugin: sub_process     source: field_hero_images     process:       target_id: fid       alt: alt       title: title       width: width       height: height       field_tag:         plugin: default_value         default_value: hero   Contributing  If you find this project useful... please consider making a donation. ","tags":"","url":"drupal_project_page.html"},{"title":"Search Results","text":" ","tags":"","url":"search--results.html"}]};
